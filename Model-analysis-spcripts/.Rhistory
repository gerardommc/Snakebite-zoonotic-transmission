knitr::opts_chunk$set(echo = TRUE)
#Snakebite model data
bites.model <- read.csv("../Model-results/Mass-action-estimates.csv")
beta0 <- bites.hum.pars[paste0("beta0[", 1:5, "]"), "Median"]
#Snakebite model data
bites.hum.pars <- read.csv("../Model-results/Mass-action-estimates.csv")
beta0 <- bites.hum.pars[paste0("beta0[", 1:5, "]"), "Median"]
beta1 <- bites.hum.pars[paste0("beta1[", 1:5, "]"), "Median"]
beta0
bites.hum.pars
beta0 <- subset(bites.hum.pars, X == paste0("beta0[", 1:5, "]"), select = "Median")
beta0
beta0 <- subset(bites.hum.pars, X == paste0("beta0[", 1:5, "]"), select = "Median")
beta1 <- subset(bites.hum.pars, X == paste0("beta1[", 1:5, "]"), select = "Median")
model.bites <- raster("../Model-results/Spatial/Snakebites/Incidence.asc")
#load("Data objects/Potential incidence-Negbin.RData")
library(raster); library(rgdal); library(R2jags); library(MASS); library(SpatialPack); library(readODS)
model.bites <- raster("../Model-results/Spatial/Snakebites/Incidence.asc")
log.hum <- log(incid.data$hum.pop)
incid.data <- read.csv("../Data/Incid-data.csv")[, -1]
log.hum <- log(incid.data$hum.pop)
Hum.bit <- extract(model.bites, incid.data[, c("x", "y")])
Hum.env <- incid.data$envenomings * incid.data$hum.pop
Hum.env <- ifelse(Hum.env > Hum.bit, Hum.bit, Hum.env)
Hum.env <- floor(Hum.env)
Beta.i <- exp(beta0[incid.data$land.cover] + beta1[incid.data$land.cover] * log.hum^2)
Beta.i <- exp(beta0[,incid.data$land.cover] + beta1[,incid.data$land.cover] * log.hum^2)
Beta.i <- exp(beta0[incid.data$land.cover,] + beta1[incid.data$land.cover,] * log.hum^2)
S <- as.matrix(incid.data[, 3:9])
max.s <- apply(S, 2, max)
S <- sweep(S, 2, max.s, "/")
S <- sweep(S, 2, expert.indices$Severity/10 * rel.abund, "*")
expert.indices <- read.csv("../Data/Agressivenes-indices.csv")
rel.abund <- with(snake.pars, Density_5k)
snake.pars <- read.csv("../Data/Parameters-questions.csv")
rel.abund <- with(snake.pars, Density_5k)
S <- sweep(S, 2, expert.indices$Severity/10 * rel.abund, "*")
S <- sweep(S, 1, Beta.i, "*")
envenom.incidence <- readRDS("../Model-results/Envenoming-NIMBLE-model.rds")
x1 <- lapply(envenom.incidence, function(x1){x1[, 1:22]})
gel.diag <- gelman.diag(as.mcmc.list(x1))
gel.diag
gel.diag$psrf[1]
gel.diag$psrf
gel.diag$psrf[2]
gel.diag$psrf
x1 <- lapply(envenom.incidence, function(x1){x1[, c(paste0("inter[", 1:5, "]"),
paste0("s.effects[", 1:7, "]"),
"r", "tau")]})
x1 <- lapply(envenom.incidence, function(x1){x1[, c(paste0("inter[", 1:5, "]"),
paste0("s.effects[", 1:7, "]"),
"r")]})
gel.diag <- gelman.diag(as.mcmc.list(x1))
gel.diag
colnames(x1[[1]])
gel.diag$psrf[i][1:13]
gel.diag$psrf[1:13]
gel.diag
sum.inc.pars <- foreach(i = 1:22, .combine = rbind) %do% {
med <- median(c(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]))
std.dev <- sd(c(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]))
cr.int <- HPDinterval(as.mcmc(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]), 0.95)
g.d <- gel.diag$psrf[i]
return(c(med, std.dev, cr.int))
}
sum.inc.pars <- foreach(i = 1:13, .combine = rbind) %do% {
med <- median(c(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]))
std.dev <- sd(c(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]))
cr.int <- HPDinterval(as.mcmc(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]), 0.95)
g.d <- gel.diag$psrf[i]
return(c(med, std.dev, cr.int))
}
library(foreach)
sum.inc.pars <- foreach(i = 1:13, .combine = rbind) %do% {
med <- median(c(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]))
std.dev <- sd(c(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]))
cr.int <- HPDinterval(as.mcmc(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]), 0.95)
g.d <- gel.diag$psrf[i]
return(c(med, std.dev, cr.int))
}
sum.inc.pars <- data.frame(sum.inc.pars)
names(sum.inc.pars) <- c("Median", "Std.Dev", "Cr.025", "Cr.975")
rownames(sum.inc.pars) <- colnames(x1[[1]])
knitr::kable(sum.inc.pars)
sum.inc.pars <- data.frame(sum.inc.pars)
sum.inc.pars <- foreach(i = 1:13, .combine = rbind) %do% {
med <- median(c(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]))
std.dev <- sd(c(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]))
cr.int <- HPDinterval(as.mcmc(x1[[1]][, i], x1[[2]][, i], x1[[3]][, i]), 0.95)
return(c(med, std.dev, cr.int, g.d))
}
sum.inc.pars <- data.frame(sum.inc.pars)
names(sum.inc.pars) <- c("Median", "Std.Dev", "Cr.025", "Cr.975", "")
sum.inc.pars$Gelman.conv <- gel.diag$psrf[, 2]
rownames(sum.inc.pars) <- colnames(x1[[1]])
knitr::kable(sum.inc.pars)
x.rho <- lapply(envenom.incidence, function(x1){x1[, paste0("rho[", 1:3057, "]")]})
rho <- apply(rbind(x.rho[[1]], x.rho[[2]], x.rho[[3]]) , 2,
function(x){
HPDinterval(as.mcmc(x), 0.5)
})
diag.rho <- geweke.diag(x.rho)
rho.r <- rasterFromXYZ(data.frame(incid.data[, c("x", "y")], rho[, 1]))
rho[, 1]
rho.r <- rasterFromXYZ(data.frame(incid.data[, c("x", "y")], rho[1,]))
rho
rho.diag <- geweke.diag(x.rho)
diag.rho.r <- rasterFromXYZ(data.frame(incid.data[, c("x", "y")], rho.diag$z))
random.effects <- lapply(envenom.incidence, function(x1){x1[, paste0("rho[", 1:3057, "]")]})
rho <- apply(rbind(random.effects[[1]], random.effects[[2]], random.effects[[3]]) , 2,
function(x){
median
})
rho.diag <- geweke.diag(x.rho)
rho.r <- rasterFromXYZ(data.frame(incid.data[, c("x", "y")], rho))
dim(rho)
class(rho)
length(rho)
random.effects <- lapply(envenom.incidence, function(x1){x1[, paste0("rho[", 1:3057, "]")]})
rho <- rbind(random.effects[[1]], random.effects[[2]], random.effects[[3]])
rho <- apply(rho, 2, median)
rho.r <- rasterFromXYZ(data.frame(incid.data[, c("x", "y")], rho))
rho.diag <- geweke.diag(x.rho)
rho.diag <- geweke.diag(x.rho)
rho.diag.r <- rasterFromXYZ(data.frame(incid.data[, c("x", "y")], rho.diag$z))
rho.stack <- stack(rho.r, rho.diag.r)
names(rho.stack) <- c("rho", "Geweke convergence")
plot(rho.stack)
Beta.i <- exp(beta0[incid.data$land.cover] + beta1[incid.data$land.cover] * Hum.log^2)
Beta.i <- exp(beta0[incid.data$land.cover, ] + beta1[incid.data$land.cover, ] * Hum.log^2)
Beta.i <- exp(beta0[incid.data$land.cover, ] + beta1[incid.data$land.cover, ] * log(incid.data$hum.pop)^2)
S <- as.matrix(incid.data[, 3:9])
max.s <- apply(S, 2, max)
S <- sweep(S, 2, max.s, "/")
S <- sweep(S, 2, indices$Severity/10 * rel.abund, "*")
S <- sweep(S, 2, expert.indices$Severity/10 * rel.abund, "*")
S <- sweep(S, 1, Beta.i, "*")
s.preds <- apply(x.seffs, 1, function(x){
rowSums(sweep(S, MARGIN = 2, x, FUN = "*"))
})
x.full <- rbind(fixed.effects[[1]], fixed.effects[[2]], fixed.effects[[3]])
envenom.incidence <- readRDS("../Model-results/Envenoming-NIMBLE-model.rds")
fixed.effects <- lapply(envenom.incidence, function(x1){x1[, c(paste0("inter[", 1:5, "]"),
paste0("s.effects[", 1:7, "]"),
"r")]})
gel.diag <- gelman.diag(as.mcmc.list(fixed.effects))
library(foreach)
sum.inc.pars <- foreach(i = 1:13, .combine = rbind) %do% {
med <- median(c(fixed.effects[[1]][, i], fixed.effects[[2]][, i], fixed.effects[[3]][, i]))
std.dev <- sd(c(fixed.effects[[1]][, i], fixed.effects[[2]][, i], fixed.effects[[3]][, i]))
cr.int <- HPDinterval(as.mcmc(fixed.effects[[1]][, i], fixed.effects[[2]][, i], fixed.effects[[3]][, i]), 0.95)
return(c(med, std.dev, cr.int, g.d))
}
sum.inc.pars <- data.frame(sum.inc.pars)
names(sum.inc.pars) <- c("Median", "Std.Dev", "Cr.025", "Cr.975", "")
sum.inc.pars$Gelman.conv <- gel.diag$psrf[, 2]
rownames(sum.inc.pars) <- colnames(x1[[1]])
knitr::kable(sum.inc.pars)
x.full <- rbind(fixed.effects[[1]], fixed.effects[[2]], fixed.effects[[3]])
x.ints <- x.full[, paste0("inter[", 1:5, "]")]
x.seffs <- x.full[, paste0("s.effects[", 1:7, "]")]
x.rho <- rbind(random.effects[[1]], random.effects[[2]], random.effects[[3]])
Beta.i <- exp(beta0[incid.data$land.cover, ] + beta1[incid.data$land.cover, ] * log(incid.data$hum.pop)^2)
S <- as.matrix(incid.data[, 3:9])
max.s <- apply(S, 2, max)
S <- sweep(S, 2, max.s, "/")
S <- sweep(S, 2, expert.indices$Severity/10 * rel.abund, "*")
S <- sweep(S, 1, Beta.i, "*")
s.preds <- apply(x.seffs, 1, function(x){
rowSums(sweep(S, MARGIN = 2, x, FUN = "*"))
})
s.effs <- s.preds + t(x.ints[, incid.data$land.cover])
inc.preds <- exp(s.effs)/(1+exp(s.effs)) * exp(t(x.rho))
inc.sum <- data.frame(t(apply(inc.preds, 1, function(x1){HPDinterval(as.mcmc(x1), 0.5)})))
names(inc.sum) <- c("incid", "incid.1")
inc.preds <- exp(s.effs)/(1+exp(s.effs)) * exp(t(x.rho))
inc.sum <- data.frame(t(apply(inc.preds, 1, function(x1){HPDinterval(as.mcmc(x1), 0.5)})))
names(inc.sum) <- c("incid", "incid.1")
prob.env <- rasterFromXYZ(data.frame(incid.data[, c("x", "y")], inc.sum$incid))
env.inc.mod <- prob.env*model.bites
incid.data$hum.env <- with(incid.data, hum.pop * envenomings)
envs.data <- rasterFromXYZ(incid.data[,c("x", "y", "hum.env")])
hum.pop.r <- rasterFromXYZ(incid.data[,c("x", "y", "hum.pop")])
env.inc.data <- rasterFromXYZ(incid.data[,c("x", "y", "envenomings")])
envs.model <- rasterFromXYZ(cbind(incid.data[, c("x", "y")], preds.env.ints.2))
envs.model <- rasterFromXYZ(cbind(incid.data[, c("x", "y")], env.inc.mod))
env.inc.mod <- prob.env*model.bites
class(env.inc.mod)
envs.model <- env.inc.model * hum.pop.r
env.inc.model <- prob.env*model.bites
incid.data$hum.env <- with(incid.data, hum.pop * envenomings)
envs.data <- rasterFromXYZ(incid.data[,c("x", "y", "hum.env")])
hum.pop.r <- rasterFromXYZ(incid.data[,c("x", "y", "hum.pop")])
env.inc.data <- rasterFromXYZ(incid.data[,c("x", "y", "envenomings")])
envs.model <- env.inc.model * hum.pop.r
library(rasterVis); library(RColorBrewer)
library(rasterVis); library(RColorBrewer)
jet.2 <- colorRampPalette(c("navy","forestgreen", "darkgoldenrod1", "darkorange3"))
another.1 <- colorRampPalette(c("midnightblue",
"turquoise3",
"violetred3",
"goldenrod1",
"grey95"))
another <- colorRampPalette(c("midnightblue",
"turquoise3",
"violetred3",
"yellow1"))
cool <- colorRampPalette(c("orangered1", "goldenrod1", "darkturquoise"))
envs.r <- stack(envs.model, envs.data)
names(envs.r) <- c("Model", "Data")
env.incid.r <-  stack(env.inc.model, env.inc.data)
names(env.incid.r) <- c("Model", "Data")
levelplot(envs.r, col.regions = rev(another.1(100)), at = seq(0, 250, len = 100), main = "Number of envenomings")
levelplot(env.incid.r, col.regions = rev(another.1(100)), at = seq(0, 0.007, len = 100), main = "Envenoming incidence")
#plot(env.incid.r)
cor.tests.df <- data.frame(rasterToPoints(stack(envs.r, env.incid.r))))
cor.tests.df <- data.frame(rasterToPoints(stack(envs.r, env.incid.r)))
library(scales); library(SpatialPack)
cor.tests.df <- data.frame(rasterToPoints(stack(envs.r, env.incid.r)))
names(cor.tests.df) <- c("x", "y", "Model incidence", "Data incidence",
"Model bites", "Data bites")
names(cor.tests.df) <- c("x", "y", "Model.incidence", "Data.incidence",
"Model.bites", "Data.bites")
cor.incid <- modified.ttest(cor.tests.df$Model.incidence,
cor.tests.df$Data.incidence,
cor.tests.df[, c("x", "y")])
cor.bite <- modified.ttest(cor.tests.df$Model.bites,
cor.tests.df$Data.bites,
cor.tests.df[, c("x", "y")])
par(mfrow = c(1,2))
plot(cor.tests.df$Model.bites, cor.tests.df$Data.bites, main = "Number of envenomings",
xlab = "Data",  ylab = "Model", pch = 20, col = alpha("grey70", 0.5), cex = 1.5)
abline(a = 0, b = 1, col = "orangered1", lwd = 2.5)
library(scales); library(SpatialPack)
cor.tests.df <- data.frame(rasterToPoints(stack(envs.r, env.incid.r)))
names(cor.tests.df) <- c("x", "y", "Model.incidence", "Data.incidence",
"Model.bites", "Data.bites")
cor.incid <- modified.ttest(cor.tests.df$Model.incidence,
cor.tests.df$Data.incidence,
cor.tests.df[, c("x", "y")])
cor.bite <- modified.ttest(cor.tests.df$Model.bites,
cor.tests.df$Data.bites,
cor.tests.df[, c("x", "y")])
par(mfrow = c(1,2))
plot(cor.tests.df$Model.bites, cor.tests.df$Data.bites, main = "Number of envenomings",
xlab = "Data",  ylab = "Model", pch = 20, col = alpha("grey70", 0.5), cex = 1.5)
abline(a = 0, b = 1, col = "orangered1", lwd = 2.5)
text(x = 40, y = 150, paste0("r = ", round(cor.bite$corr, 2), ", P = ", round(cor.bite$p.value, 2)))
plot(cor.tests.df$Model.incidence, cor.tests.df$Data.incidence, main = "Envenoming incidence",
xlab = "Data",  ylab = "Model", pch = 20, col = alpha("grey70", 0.5),  cex = 1.5)
abline(a = 0, b = 1, col = "orangered1", lwd = 2.5)
text(x = 0.0015, y = 0.006, paste0("r = ", round(cor.incid$corr, 2), ", P = ", round(cor.incid$p.value, 2)))
library(scales); library(SpatialPack)
cor.tests.df <- data.frame(rasterToPoints(stack(envs.r, env.incid.r)))
names(cor.tests.df) <- c("x", "y", "Model.incidence", "Data.incidence",
"Model.bites", "Data.bites")
cor.incid <- modified.ttest(cor.tests.df$Model.incidence,
cor.tests.df$Data.incidence,
cor.tests.df[, c("x", "y")])
cor.bite <- modified.ttest(cor.tests.df$Model.bites,
cor.tests.df$Data.bites,
cor.tests.df[, c("x", "y")])
par(mfrow = c(1,2))
plot(cor.tests.df$Model.bites, cor.tests.df$Data.bites, main = "Number of envenomings",
xlab = "Data",  ylab = "Model", pch = 20, col = alpha("grey70", 0.5), cex = 1.5)
abline(a = 0, b = 1, col = "orangered1", lwd = 2.5)
text(x = 40, y = 150, paste0("r = ", round(cor.bite$corr, 2), ", P = ", round(cor.bite$p.value, 2)))
plot(cor.tests.df$Model.incidence, cor.tests.df$Data.incidence, main = "Envenoming incidence",
xlab = "Data",  ylab = "Model", pch = 20, col = alpha("grey70", 0.5),  cex = 1.5)
abline(a = 0, b = 1, col = "orangered1", lwd = 2.5)
text(x = 0.0015, y = 0.0045, paste0("r = ", round(cor.incid$corr, 2), ", P = ", round(cor.incid$p.value, 2)))
names(cor.tests.df) <- c("x", "y", "Model.bites", "Data.bites",
"Model.incidence", "Data.incidence")
cor.incid <- modified.ttest(cor.tests.df$Model.incidence,
cor.tests.df$Data.incidence,
cor.tests.df[, c("x", "y")])
cor.incid <- modified.ttest(cor.tests.df$Model.incidence,
cor.tests.df$Data.incidence,
cor.tests.df[, c("x", "y")])
cor.bite <- modified.ttest(cor.tests.df$Model.bites,
cor.tests.df$Data.bites,
cor.tests.df[, c("x", "y")])
par(mfrow = c(1,2))
library(scales); library(SpatialPack)
cor.tests.df <- data.frame(rasterToPoints(stack(envs.r, env.incid.r)))
names(cor.tests.df) <- c("x", "y", "Model.bites", "Data.bites",
"Model.incidence", "Data.incidence")
cor.incid <- modified.ttest(cor.tests.df$Model.incidence,
cor.tests.df$Data.incidence,
cor.tests.df[, c("x", "y")])
cor.bite <- modified.ttest(cor.tests.df$Model.bites,
cor.tests.df$Data.bites,
cor.tests.df[, c("x", "y")])
par(mfrow = c(1,2))
plot(cor.tests.df$Model.bites, cor.tests.df$Data.bites, main = "Number of envenomings",
xlab = "Data",  ylab = "Model", pch = 20, col = alpha("grey70", 0.5), cex = 1.5)
abline(a = 0, b = 1, col = "orangered1", lwd = 2.5)
text(x = 40, y = 150, paste0("r = ", round(cor.bite$corr, 2), ", P = ", round(cor.bite$p.value, 2)))
plot(cor.tests.df$Model.incidence, cor.tests.df$Data.incidence, main = "Envenoming incidence",
xlab = "Data",  ylab = "Model", pch = 20, col = alpha("grey70", 0.5),  cex = 1.5)
abline(a = 0, b = 1, col = "orangered1", lwd = 2.5)
text(x = 0.0015, y = 0.0045, paste0("r = ", round(cor.incid$corr, 2), ", P = ", round(cor.incid$p.value, 2)))
library(scales); library(SpatialPack)
cor.tests.df <- data.frame(rasterToPoints(stack(envs.r, env.incid.r)))
names(cor.tests.df) <- c("x", "y", "Model.bites", "Data.bites",
"Model.incidence", "Data.incidence")
cor.incid <- modified.ttest(cor.tests.df$Model.incidence,
cor.tests.df$Data.incidence,
cor.tests.df[, c("x", "y")])
cor.bite <- modified.ttest(cor.tests.df$Model.bites,
cor.tests.df$Data.bites,
cor.tests.df[, c("x", "y")])
par(mfrow = c(1,2))
plot(cor.tests.df$Data.bites, cor.tests.df$Model.bites,  main = "Number of envenomings",
xlab = "Data",  ylab = "Model", pch = 20, col = alpha("grey70", 0.5), cex = 1.5)
abline(a = 0, b = 1, col = "orangered1", lwd = 2.5)
text(x = 40, y = 150, paste0("r = ", round(cor.bite$corr, 2), ", P = ", round(cor.bite$p.value, 2)))
plot(cor.tests.df$Data.incidence,cor.tests.df$Model.incidence, main = "Envenoming incidence",
xlab = "Data",  ylab = "Model", pch = 20, col = alpha("grey70", 0.5),  cex = 1.5)
abline(a = 0, b = 1, col = "orangered1", lwd = 2.5)
text(x = 0.0015, y = 0.0045, paste0("r = ", round(cor.incid$corr, 2), ", P = ", round(cor.incid$p.value, 2)))
library(scales); library(SpatialPack)
cor.tests.df <- data.frame(rasterToPoints(stack(envs.r, env.incid.r)))
names(cor.tests.df) <- c("x", "y", "Model.bites", "Data.bites",
"Model.incidence", "Data.incidence")
cor.incid <- modified.ttest(cor.tests.df$Model.incidence,
cor.tests.df$Data.incidence,
cor.tests.df[, c("x", "y")])
cor.bite <- modified.ttest(cor.tests.df$Model.bites,
cor.tests.df$Data.bites,
cor.tests.df[, c("x", "y")])
par(mfrow = c(1,2))
plot(cor.tests.df$Data.bites, cor.tests.df$Model.bites,  main = "Number of envenomings",
xlab = "Data",  ylab = "Model", pch = 20, col = alpha("grey70", 0.5), cex = 1.5)
abline(a = 0, b = 1, col = "orangered1", lwd = 2.5)
text(x = 40, y = 150, paste0("r = ", round(cor.bite$corr, 2), ", P = ", round(cor.bite$p.value, 2)))
plot(cor.tests.df$Data.incidence,cor.tests.df$Model.incidence, main = "Envenoming incidence",
xlab = "Data",  ylab = "Model", pch = 20, col = alpha("grey70", 0.5),  cex = 1.5)
abline(a = 0, b = 1, col = "orangered1", lwd = 2.5)
text(x = 0.0015, y = 0.0045, paste0("r = ", round(cor.incid$corr, 2), ", P = ", round(cor.incid$p.value, 2)))
par(mfrow = c(1, 2))
qqplot(x = cor.tests.df$Data.bites, y = cor.tests.df$Model.bites, main = "QQ plot-bites",
xlab = "Data", ylab = "Model")
abline(a = 0, b = 1, col = "red")
qqplot(x = cor.tests.df$Data.incidence, y = cor.tests.df$Model.incidence, main = "QQ plot-incidence",
xlab = "Data", ylab = "Model",
xlim = c(0, 0.0065), ylim = c(0, 0.0065))
abline(a = 0, b = 1, col = "red")
aggres <- read.csv("../Data/Agressivenes-indices.csv")
snake.pars <- read_ods("../Data/Parameters-questions.csv")
aggres <- read.csv("../Data/Agressivenes-indices.csv")
snake.pars <- read.csv("../Data/Parameters-questions.csv")
rel.abund <- snake.pars$Density_5k
sev <- aggres$Severity/10
abund.sev <- rel.abund* sev
abund.sev.df <- data.frame(Spp = names(indices.df),
abund.sev = abund.sev)
names(indices.df)
library(reshape2); library(ggplot2); library(readODS)
library(reshape2); library(ggplot2); library(readODS)
x.ints
indices.df <- data.frame(x.ints)
names(indices.df) <- c("Bungarus caeruleus", "Bungarus ceylonicus",
"Daboia russelii", "Echis carinatus",
"Hypnale spp.", "Naja naja",
"Trimeresurus trigonocephalus")
indices.df <- data.frame(t(x.ints))
names(indices.df) <- c("Bungarus caeruleus", "Bungarus ceylonicus",
"Daboia russelii", "Echis carinatus",
"Hypnale spp.", "Naja naja",
"Trimeresurus trigonocephalus")
aggres <- read.csv("../Data/Agressivenes-indices.csv")
snake.pars <- read.csv("../Data/Parameters-questions.csv")
rel.abund <- snake.pars$Density_5k
sev <- aggres$Severity/10
abund.sev <- rel.abund* sev
abund.sev.df <- data.frame(Spp = names(indices.df),
abund.sev = abund.sev)
names(indices.df)
indices.df <- data.frame(x.ints)
names(indices.df) <- c("Bungarus caeruleus", "Bungarus ceylonicus",
"Daboia russelii", "Echis carinatus",
"Hypnale spp.", "Naja naja",
"Trimeresurus trigonocephalus")
dim(indices.df)
indices.df <- data.frame(x.seffs)
names(indices.df) <- c("Bungarus caeruleus", "Bungarus ceylonicus",
"Daboia russelii", "Echis carinatus",
"Hypnale spp.", "Naja naja",
"Trimeresurus trigonocephalus")
aggres <- read.csv("../Data/Agressivenes-indices.csv")
snake.pars <- read.csv("../Data/Parameters-questions.csv")
rel.abund <- snake.pars$Density_5k
sev <- aggres$Severity/10
abund.sev <- rel.abund* sev
abund.sev.df <- data.frame(Spp = names(indices.df),
abund.sev = abund.sev)
ind.melt <- melt(indices.df,
value.name = "Indices",
measure.vars = names(indices.df)
)
ind.melt$Abund.sev <- sapply(1:nrow(ind.melt),
function(x){
abund.sev.df$abund.sev[abund.sev.df$Spp == ind.melt$variable[x]]
})
ind.melt$severity <- sapply(1:nrow(ind.melt),
function(x){
sev[abund.sev.df$Spp == ind.melt$variable[x]]
})
ind.melt$rel.abund <- sapply(1:nrow(ind.melt),
function(x){
rel.abund$Average[abund.sev.df$Spp == ind.melt$variable[x]]
})
ind.melt$variable
abund.sev.df$Spp
ind.melt$rel.abund <- sapply(1:nrow(ind.melt),
function(x){
rel.abund$Average[abund.sev.df$Spp == ind.melt$variable[x]]
})
x
x = 1
rel.abund$Average[abund.sev.df$Spp == ind.melt$variable[x]]
ind.melt$rel.abund <- sapply(1:nrow(ind.melt),
function(x){
rel.abund[abund.sev.df$Spp == ind.melt$variable[x]]
})
```{r fig.height=4, fig.width=6, echo = F}
ggplot(ind.melt) + geom_boxplot(aes(x = log10(Abund.sev), y = Indices * severity, fill = variable, colour = variable), alpha = 0.6) +
labs(x = "log10 Relative abundance x severity",
y = "Fitted effect")
ggplot(ind.melt) + geom_boxplot(aes(x = severity, y = Indices * severity, fill = variable, colour = variable), alpha = 0.6) +
labs(x = "severity",
y = "Fitted effect")
ggplot(ind.melt) + geom_boxplot(aes(x = log10(rel.abund), y = Indices * severity, fill = variable, colour = variable), alpha = 0.6) +
labs(x = "log10 Relative abundance",
y = "Fitted effect")
resids <- with(cor.tests.df, Data.bites - Model.bites)
par(mfrow = c(1, 3))
plot(density(na.omit(resids)/sd(resids)), main = "Density of standardised residuals")
resids <- with(cor.tests.df, Data.bites - Model.bites)
par(mfrow = c(1, 3))
plot(density(na.omit(resids)/sd(resids)), main = "Density of standardised residuals")
plot(cor.tests.df$Data.bites, resids/sd(resids), main = "Residuals vs bites", xlab = "Predicted number of envenomings", ylab = "Standardised residuals", pch = 20, col = "lightgrey",  cex = 0.5)
abline(h = 0, col = "orangered1", lwd = 1.5)
plot(cor.tests.df$Model.bites, resids/cor.tests.df$Data.bites, main = "Scale of model deviations from data", xlab = "Predicted number of envenomings", ylab = "Residuals / Number of envenomings",
pch = 20, col = "lightgrey", cex = 0.5)
abline(h = 0, col = "orangered1", lwd = 1.5)
env.incid.r
resid.env <- envs.r[[1]] - envs.r[[2]]
resid.env <- resid.env/cellStats(resid.env, sd)
names(envs.r)
resid.inc <- env.incid.r[[2]] - env.incid.r[[1]]
resid.inc <- resid.inc/cellStats(resid.inc, sd)
resids.r <- stack(resid.env, resid.inc)
names(resids.r) <- c("Envenomings", "Incidence")
levelplot(resids.r, main = "Standardised residuals",  col.regions = cool(50),
at = seq(-7, 7, len = 50),
margin = F, contour = F)
sla.districts <- readOGR("Popn and topo data/Sri Lanka boundaries/LKA_adm1.shp")
sla.districts <- readOGR("../Data/Sri Lanka boundaries/LKA_adm1.shp")
sla.dist.sld99 <- spTransform(sla.districts, CRSobj = CRS("+init=epsg:5235"))
mse.regions <- foreach(i = 1:nrow(sla.dist.sld99), .combine = c) %do% {
name <- sla.dist.sld99$NAME_1
pol <- subset(sla.dist.sld99, NAME_1 == name[i])
extr <- extract(env.incid.r, pol)
err <- sqrt(mean(na.omit((extr[[1]][, 1] - extr[[1]][, 2])^2)))
return(err)
}
sla.dist.sld99$rmse.env <- mse.regions
sla.fort <- fortify(sla.dist.sld99)
sla.fort$id <- as.numeric(sla.fort$id)
sla.fort$id <- as.character(sla.fort$id + 1)
sla.dist.sld99@data$id <- sla.dist.sld99@data$ID_1
sla.fort <- merge(sla.fort, sla.dist.sld99@data, by = "id")
library(ggplot2)
ggplot(sla.fort, aes(x = long, y = lat, group = group, fill = rmse.env)) + geom_polygon(colour = "white") +
coord_equal()
saveRDS(sla.fort, "../Model-results/SLA-districts-CAR-RMSE-envs.rds")
